"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const policy = {
    policy: {
        genero: {
            modelLevel: {
                read: {
                    guard: Genero_read,
                },
                create: {
                    guard: Genero_create, inputChecker: Genero_create_input,
                },
                update: {
                    guard: Genero_update,
                },
                postUpdate: {
                    guard: Genero_postUpdate,
                },
                delete: {
                    guard: Genero_delete,
                }
            },
            fieldLevel: {
                read: {},
                update: {},
            },
        },
        livro: {
            modelLevel: {
                read: {
                    guard: Livro_read,
                },
                create: {
                    guard: Livro_create, inputChecker: Livro_create_input,
                },
                update: {
                    guard: Livro_update,
                },
                postUpdate: {
                    guard: Livro_postUpdate,
                },
                delete: {
                    guard: Livro_delete,
                }
            },
            fieldLevel: {
                read: {},
                update: {},
            },
        },
    },
    validation: {
        genero: {
            hasValidation: true
        },
        livro: {
            hasValidation: true
        },
    },
};
function Genero_read(context, db) {
    return { OR: [] };
}
function $check_Genero_read(input, context) {
    return false;
}
function Genero_create(context, db) {
    return { OR: [] };
}
function $check_Genero_create(input, context) {
    return false;
}
function Genero_create_input(input, context) {
    return false;
}
function Genero_update(context, db) {
    return { OR: [] };
}
function $check_Genero_update(input, context) {
    return false;
}
function Genero_postUpdate(context, db) {
    return { AND: [] };
}
function $check_Genero_postUpdate(input, context) {
    return true;
}
function Genero_delete(context, db) {
    return { OR: [] };
}
function $check_Genero_delete(input, context) {
    return false;
}
function Livro_read(context, db) {
    return { OR: [] };
}
function $check_Livro_read(input, context) {
    return false;
}
function Livro_create(context, db) {
    return { OR: [] };
}
function $check_Livro_create(input, context) {
    return false;
}
function Livro_create_input(input, context) {
    return false;
}
function Livro_update(context, db) {
    return { OR: [] };
}
function $check_Livro_update(input, context) {
    return false;
}
function Livro_postUpdate(context, db) {
    return { AND: [] };
}
function $check_Livro_postUpdate(input, context) {
    return true;
}
function Livro_delete(context, db) {
    return { OR: [] };
}
function $check_Livro_delete(input, context) {
    return false;
}
exports.default = policy;
