import { z } from 'zod';
/**
 * `Genero` schema excluding foreign keys and relations.
 */
export declare const GeneroScalarSchema: z.ZodObject<{
    id: z.ZodString;
    nome: z.ZodString;
}, "strict", z.ZodTypeAny, {
    id: string;
    nome: string;
}, {
    id: string;
    nome: string;
}>;
/**
 * `Genero` schema including all fields (scalar, foreign key, and relations) and validations.
 */
export declare const GeneroSchema: z.ZodObject<z.objectUtil.extendShape<{
    id: z.ZodString;
    nome: z.ZodString;
}, {
    livros: z.ZodOptional<z.ZodOptional<z.ZodArray<z.ZodUnknown, "many">>>;
}>, "strip", z.ZodTypeAny, {
    id: string;
    nome: string;
    livros?: unknown[] | undefined;
}, {
    id: string;
    nome: string;
    livros?: unknown[] | undefined;
}>;
/**
 * Schema used for validating Prisma create input. For internal use only.
 * @private
 */
export declare const GeneroPrismaCreateSchema: z.ZodObject<{
    id: z.ZodOptional<z.ZodString>;
    nome: z.ZodOptional<z.ZodString>;
}, "passthrough", z.ZodTypeAny, z.objectOutputType<{
    id: z.ZodOptional<z.ZodString>;
    nome: z.ZodOptional<z.ZodString>;
}, z.ZodTypeAny, "passthrough">, z.objectInputType<{
    id: z.ZodOptional<z.ZodString>;
    nome: z.ZodOptional<z.ZodString>;
}, z.ZodTypeAny, "passthrough">>;
/**
 * Schema used for validating Prisma update input. For internal use only.
 * @private
 */
export declare const GeneroPrismaUpdateSchema: z.ZodObject<{
    id: z.ZodOptional<z.ZodString>;
    nome: z.ZodOptional<z.ZodString>;
}, "passthrough", z.ZodTypeAny, z.objectOutputType<{
    id: z.ZodOptional<z.ZodString>;
    nome: z.ZodOptional<z.ZodString>;
}, z.ZodTypeAny, "passthrough">, z.objectInputType<{
    id: z.ZodOptional<z.ZodString>;
    nome: z.ZodOptional<z.ZodString>;
}, z.ZodTypeAny, "passthrough">>;
/**
 * `Genero` schema for create operations excluding foreign keys and relations.
 */
export declare const GeneroCreateScalarSchema: z.ZodObject<{
    id: z.ZodOptional<z.ZodString>;
    nome: z.ZodString;
}, "strict", z.ZodTypeAny, {
    nome: string;
    id?: string | undefined;
}, {
    nome: string;
    id?: string | undefined;
}>;
/**
 * `Genero` schema for create operations including scalar fields, foreign key fields, and validations.
 */
export declare const GeneroCreateSchema: z.ZodObject<{
    id: z.ZodOptional<z.ZodString>;
    nome: z.ZodString;
}, "strict", z.ZodTypeAny, {
    nome: string;
    id?: string | undefined;
}, {
    nome: string;
    id?: string | undefined;
}>;
/**
 * `Genero` schema for update operations excluding foreign keys and relations.
 */
export declare const GeneroUpdateScalarSchema: z.ZodObject<{
    id: z.ZodOptional<z.ZodString>;
    nome: z.ZodOptional<z.ZodString>;
}, "strict", z.ZodTypeAny, {
    id?: string | undefined;
    nome?: string | undefined;
}, {
    id?: string | undefined;
    nome?: string | undefined;
}>;
/**
 * `Genero` schema for update operations including scalar fields, foreign key fields, and validations.
 */
export declare const GeneroUpdateSchema: z.ZodObject<{
    id: z.ZodOptional<z.ZodString>;
    nome: z.ZodOptional<z.ZodString>;
}, "strict", z.ZodTypeAny, {
    id?: string | undefined;
    nome?: string | undefined;
}, {
    id?: string | undefined;
    nome?: string | undefined;
}>;
